"""
Django settings for x_media_optimizer_django_project project.
Generated by 'django-admin startproject' using Django 4.0.4.
For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import os
from pathlib import Path
from sshtunnel import SSHTunnelForwarder
import json

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-e4=jk(bwu&j9-k9@#9ax8qx^2k9*k^68_ys(3y18oim!kedu-v"

# Destroy the session on 5 hours of inactivity
SESSION_COOKIE_AGE = 5 * 60 * 60

# To use @login_required decorator to redirect user to login when not authorized
LOGIN_URL = "/login/"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "users.apps.UsersConfig",
    "home.apps.HomeConfig",
    "optimizer.apps.OptimizerConfig",
    "predictor.apps.PredictorConfig",
    "saved_plans.apps.SavedPlansConfig",
    "goalseek.apps.GoalseekConfig",
    "optimizer_view_results.apps.OptimizerViewResultsConfig",
    "crispy_forms",
    'crispy_bootstrap5',
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "x_media_optimizer_django_project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "x_media_optimizer_django_project.wsgi.application"

# Declaring the environment
ENVIRONMENT = os.getenv('ENVIRONMENT')
if ENVIRONMENT == 'production':
    path_to_config_file = '/var/www/optimizer/config.json'
elif ENVIRONMENT == 'test':
    path_to_config_file = 'config.json'
else:
    path_to_config_file = 'config.json'


json_config_data = ""
with open(path_to_config_file) as config_file:
    json_config_data = json.load(config_file)
if ENVIRONMENT == 'test':
    ALLOWED_HOSTS = [json_config_data[ENVIRONMENT]["SERVER_IP_ADDRESS"]]
elif ENVIRONMENT == 'production':
    ALLOWED_HOSTS = ['outcomesoptimizer.xmedia.com']
else:
    ALLOWED_HOSTS = []
# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {}
if len(ALLOWED_HOSTS) == 0:
    ssh_tunnel = SSHTunnelForwarder(
        (json_config_data[ENVIRONMENT]["SERVER_IP_ADDRESS"]),
        ssh_password=json_config_data[ENVIRONMENT]["SSH_PASSWORD"],
        ssh_private_key=json_config_data[ENVIRONMENT]["SSH_PRIVATE_KEY"],
        ssh_username=json_config_data[ENVIRONMENT]["SSH_USERNAME"],
        remote_bind_address=(json_config_data[ENVIRONMENT]["DATABASE_HOSTNAME"], json_config_data[ENVIRONMENT]["DATABASE_PORT"]),
    )
    ssh_tunnel.start()
    DATABASES = {
        'default': {
            'ENGINE': json_config_data[ENVIRONMENT]["ENGINE"],
            'NAME': json_config_data[ENVIRONMENT]["DATABASE_NAME"],
            'USER': json_config_data[ENVIRONMENT]["DATABASE_USER"],
            'PASSWORD': json_config_data[ENVIRONMENT]["DATABASE_PASSWORD"],
            'HOST': '127.0.0.1',
            'PORT': ssh_tunnel.local_bind_port,
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': json_config_data[ENVIRONMENT]["ENGINE"],
            'NAME': json_config_data[ENVIRONMENT]["DATABASE_NAME"],
            'USER': json_config_data[ENVIRONMENT]["DATABASE_USER"],
            'PASSWORD': json_config_data[ENVIRONMENT]["DATABASE_PASSWORD"],
            'HOST': json_config_data[ENVIRONMENT]['DATABASE_HOSTNAME'],
            'PORT': json_config_data[ENVIRONMENT]['DATABASE_PORT'],
        }
    }
    

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# All the MANUAL changes
# Manually installed packages
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"
# Manually set setting
LOGIN_REDIRECT_URL = "home"
LOGIN_URL = "login"
# Email - sent for forgot password
MAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.office365.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = json_config_data["EMAIL"]
EMAIL_HOST_PASSWORD = json_config_data["PASSWORD"]
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER